# ---- variables ----

variables:
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"

# ---- caches ----

.node_modules-cache: &node_modules-cache
  key:
    files:
      - yarn.lock
  paths:
    - node_modules

.yarn-cache: &yarn-cache
  key: yarn-$CI_JOB_IMAGE
  paths:
    - .yarn

.yarn-build-cache: &yarn-build-cache
  key: build-$CI_JOB_IMAGE
  paths:
      - .cache
      - public
  policy: pull-push

# ---- stages ----

stages:
  - build-dev
  - deploy-dev
  - build-beta
  - deploy-beta
  - deploy-dev-firebase

# ---- Cloud Run Dev ----

build-dev:
  stage: build-dev
  only:
    - development
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  # variables:
  #   DOCKER_TLS_CERTDIR: "/certs"
  script:
    - apt add --update bash curl
    - curl -s https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer | bash
    - export GOOGLE_APPLICATION_CREDENTIALS=/kaniko/kaniko-secret.json
    - cat .secure_files/google-ui-service-account.json > $GOOGLE_APPLICATION_CREDENTIALS
     - /kaniko/executor --context . --dockerfile ./Dockerfile --destination $UI_IMAGE:$CI_COMMIT_SHORT_SHA

    # - cat .secure_files/google-ui-service-account.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev
    # - docker build -t $UI_IMAGE:$CI_COMMIT_SHORT_SHA -t $UI_IMAGE:latest .
    # - docker push $UI_IMAGE:$CI_COMMIT_SHORT_SHA
    # - docker push $UI_IMAGE:latest

deploy-dev:
  stage: deploy-dev
  needs:
    - build-dev
  only:
    - development
  image: google/cloud-sdk:467.0.0-alpine
  script:
    - curl -s https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer | bash
    - cat .secure_files/google-ui-service-account.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev
    - gcloud auth activate-service-account --key-file .secure_files/google-ui-service-account.json
    - gcloud config set project $GOOGLE_CLOUD_DEV_PROJECT
    - gcloud run deploy ui --image $UI_IMAGE:$CI_COMMIT_SHORT_SHA --region=us-central1 --platform managed --allow-unauthenticated 

# ---- Cloud Run Beta ----

build-beta:
  stage: build-beta
  only:
    - main
  when: manual
  image: docker:25.0.4
  services:
    - docker:25.0.4-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - apk add --update bash curl
    - curl -s https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer | bash
    - cat .secure_files/beta-google-service-account.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev
    - docker build -t us-central1-docker.pkg.dev/pomarium/docker/ui:$CI_COMMIT_SHORT_SHA .
    - docker push us-central1-docker.pkg.dev/pomarium/docker/ui:$CI_COMMIT_SHORT_SHA

deploy-beta:
  stage: deploy-beta
  needs:
    - build-beta
  only:
    - main
  when: manual
  image: google/cloud-sdk:467.0.0-alpine
  script:
    - curl -s https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer | bash
    - cat .secure_files/beta-google-service-account.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev
    - gcloud auth activate-service-account --key-file .secure_files/beta-google-service-account.json
    - gcloud config set project $GOOGLE_CLOUD_BETA_PROJECT
    - gcloud run deploy ui --image us-central1-docker.pkg.dev/pomarium/docker/ui:$CI_COMMIT_SHORT_SHA --region=us-central1 --platform managed --allow-unauthenticated 

# ---- firebase ----

dev-firebase-deploy:
  image: node:lts-alpine3.19
  before_script:
    - apk --no-cache add curl bash
    - npm i -g firebase-tools
  stage: deploy-dev-firebase
  when: manual
  cache:
    - <<: *node_modules-cache
      policy: pull-push
    - <<: *yarn-build-cache
      policy: pull-push
  variables:
    GOOGLE_APPLICATION_CREDENTIALS: ".secure_files/google-service-key.json"
  script:
    - curl -s https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer | bash
    - yarn install
    - yarn build
    - firebase deploy --only hosting --project inicio-dev-975fe
  only:
    - development
  artifacts:
    paths:
      - dist/
